{"version":3,"sources":["Filmoteka/index.js"],"names":["api_key","img_url","BASE_URL","trending","movie_genres","SEARCH_URL","createCard","data","map","backdrop_path","poster_path","genre_ids","release_date","title","id","genre","slice","card_list","document","querySelector","btn_container","globalPage","searchTrend","page","innerHTML","fetch","then","response","json","console","log","markup","results","insertAdjacentHTML","createPagination","total_pages","totalPage","addEventListener","onBtnClick","event","target","nodeName","textContent","dir"],"mappings":";AAAA,MAAMA,EAAU,mCACVC,EAAU,kCACVC,EAAW,gCACXC,EAAW,kDACXC,EAAgB,8CAChBC,uDAAkEL,IAwClEM,EAAcC,GAMTA,EAAKC,IAAI,EAAEC,cAAAA,EAAeC,YAAAA,EAAaC,UAAAA,EAAWC,aAAAA,EAAcC,MAAAA,EAAOC,GAAAA,wCAGlDA,8DAERb,IAAUQ,WAAuBI,kDAE9BA,mCACAF,EAAUH,IAAIO,YACbA,4CAEFH,EAAaI,MAAM,EAAG,2BAkC1CC,EAAYC,SAASC,cAAc,cACnCC,EAAgBF,SAASC,cAAc,kBAE7C,IAAIE,EAEJ,SAASC,EAAYC,EAAK,GACtBN,EAAUO,UAAY,GAEtBC,MAAMtB,EAAW,YAAcH,EAAU,SAAWuB,GAAMG,KAAKC,GAAYA,EAASC,QAAQF,KAAKnB,IAC7FsB,QAAQC,IAAIvB,GACNwB,MAAAA,EAAUzB,EAAWC,EAAKyB,SAEhCf,EAAUgB,mBAAmB,YAAaF,GAC1CG,EAAiB3B,EAAKgB,KAAMhB,EAAK4B,eAMzC,SAASD,EAAiBX,EAAMa,GACxBL,IAAAA,EAAS,GAKbV,EAAaE,EAETA,EAAO,IACPQ,GAAU,oBAEXR,EAAO,IACNQ,GAAU,aACPR,EAAO,IACNQ,GAAU,QAGfR,EAAO,IACNQ,UAhBiBR,EAAO,UAkBzBA,EAAO,IACNQ,UAlBeR,EAAM,UAoBzBQ,yBAAgCR,SAC7BA,EAAOa,EAAY,IAClBL,UArBcR,EAAO,UAuBtBA,EAAOa,EAAY,IAClBL,UAvBiBR,EAAO,UAyBzBA,EAAOa,EAAY,IAClBL,GAAW,gBAEZR,EAAOa,IACNL,UAAiBK,SACjBL,GAAU,oBAEdX,EAAcI,UAAYO,EAC1BX,EAAciB,iBAAiB,QAASC,GAG5C,SAASA,EAAWC,GACbA,GAA0B,OAA1BA,EAAMC,OAAOC,SACZ,OAGED,MAAAA,EAASD,EAAMC,OAAOE,YACpBF,OAAAA,GACC,IAAA,IACDlB,EAAYD,EAAa,GAC7B,MACK,IAAA,MACL,MACK,IAAA,IACLC,EAAYD,EAAa,GACzB,MACA,QACAC,EAAYkB,GAEhBX,QAAQc,IAAIJ,EAAMC,OAAOE,aA7D7BpB","file":"Filmoteka.83153663.js","sourceRoot":"../src","sourcesContent":["const api_key = \"9c009c00402fb866baf05bd346a2d01d\";\nconst img_url = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst trending = \"https://api.themoviedb.org/3/trending/movie/day\";\nconst movie_genres = `https://api.themoviedb.org/3/discover/movie`;\nconst SEARCH_URL = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}`;\n\n\n// class FetchData {\n    \n//     constructor(){\n//         this.page = 1;\n//     }\n\n//     async moviesFetch(){\n//         const response = await fetch(trending + new URLSearchParams({\n//             api_key: api_key,\n//             page: this.page,\n//         }))\n//         return response.json();\n//     }\n\n//     setpage(newPage){\n//         this.page = newPage;\n//     }\n\n// }\n\n// const api = new FetchData();\n\n// const response =  api.moviesFetch();\n// response.then(data => {\n//     console.log(data);\n\n//     createCardList(data.results)\n    \n// })\n\n// const createCardList = (cards) => {\n//     console.log(cards);\n//     const list = cards.map(createCard).join('');\n//     card_list.insertAdjacentHTML('beforeend', list);\n    \n// }\n\nconst createCard = (data) => {\n    // {backdrop_path, poster_path, genre_ids, release_date, title, id}\n    // if (backdrop_path === null){\n    //     backdrop_path = poster_path;\n    //     if(poster_path === null) return;\n    // }\n    return data.map(({backdrop_path, poster_path, genre_ids, release_date, title, id}) =>{\n    \n    return `\n    <li class=\"card_item\" id=\"${id}>\n        <div class=\"img_thumb\">\n            <img src=\"${img_url}${backdrop_path}\" alt=\"${title}\"/>\n        </div>\n        <p class=\"title\">${title}</p>\n        <p class=\"genre\">${genre_ids.map(genre => {\n            return `<span>${genre}</span>`;\n        })}</p>\n        <p class=\"year\">${release_date.slice(0, 4)}</p>\n    </li>\n    `\n})\n}\n\n// const buttons = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22'];\n// const per_page = 5;\n// const page = 1; \n\n// function createBtnLIst(buttons,  per_page, page){\n//    let start = per_page * (page -1);\n//     let end =  start + per_page;\n//     const render_btns = buttons.slice(start, end);\n//     for (let i = 1; i < render_btns.length+1; i += 1){\n//         const btn = `<button type=\"button\" data-action=\"${i}\">${i}</button>`\n//         btn_container.insertAdjacentHTML('beforeend', btn);\n//     }\n// }\n\n// createBtnLIst(buttons, per_page, page);\n\n// btn_container.addEventListener('click', onBtnClick)\n\n// function onBtnClick(event){\n//     if (event.target === event.currentTarger) return;\n//     const page = event.target.dataset.action;\n//     api.setpage(page);\n//     api.moviesFetch().then(data => {\n//         card_list.innerHTML = '';\n//         createCardList(data.results);\n//     })\n// }\n\nconst card_list = document.querySelector('.card_list');\nconst btn_container = document.querySelector('.btn_container');\n\nlet globalPage;\n\nfunction searchTrend(page=1){\n    card_list.innerHTML = '';\n\n    fetch(trending + \"?api_key=\" + api_key + \"&page=\" + page).then(response => response.json()).then(data => {\n        console.log(data);\n        const markup =  createCard(data.results);\n        \n        card_list.insertAdjacentHTML('beforeend', markup);\n        createPagination(data.page, data.total_pages);\n\n    })\n}\nsearchTrend();\n\nfunction createPagination(page, totalPage){\n    let markup = '';\n    const beforTwoPage = page - 2;\n    const beforePage = page -1;\n    const afterPage = page + 1; \n    const afterTwoPage = page + 2;\n    globalPage = page;\n    \n    if (page > 1){\n        markup += '<li>&laquo;</li>';\n    }\n    if(page > 1){\n        markup += '<li>1</li>';\n        if(page > 4){\n            markup += '...';\n        }\n    }\n    if(page > 3){\n        markup += `<li>${beforTwoPage}</li>`\n    }\n    if(page > 2){\n        markup += `<li>${beforePage}</li>`\n    }\n    markup += `<li class='active'>${page}</li>`\n    if(page < totalPage - 1){\n        markup += `<li>${afterPage}</li>`\n    }\n    if(page < totalPage - 2){\n        markup += `<li>${afterTwoPage}</li>`\n    }\n    if(page < totalPage - 3){\n        markup += `<li>...</li>`\n    }\n    if(page < totalPage){\n        markup += `<li>${totalPage}</li>`\n        markup += '<li>&raquo;</li>'\n    }\n    btn_container.innerHTML = markup;\n    btn_container.addEventListener('click', onBtnClick);\n}\n\nfunction onBtnClick(event){\n    if(event.target.nodeName !== \"LI\"){\n        return;\n    \n    }\n    const target = event.target.textContent;\n    switch (target){\n        case '«': \n            searchTrend(globalPage - 1);\n        break;\n        case '...': \n        break;\n        case '»': \n        searchTrend(globalPage + 1);\n        break;\n        default: \n        searchTrend(target);\n    }\n    console.dir(event.target.textContent);\n}"]}