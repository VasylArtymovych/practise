{"version":3,"sources":["custom-video-player/script.js"],"names":["player","document","querySelector","toggle","video","skipBtn","querySelectorAll","range","progressBar","progress","mouseDown","togglePlay","method","paused","updateBtn","icon","textContent","skip","event","currentTime","parseFloat","currentTarget","dataset","hundleChangeUpdate","name","value","hundleProgress","percent","duration","style","flexBasis","rewind","rewindTime","offsetX","offsetWidth","addEventListener","forEach","btn","input"],"mappings":";AAAA,MAAMA,EAASC,SAASC,cAAc,WAChCC,EAASH,EAAOE,cAAc,WAC9BE,EAAQJ,EAAOE,cAAc,WAC7BG,EAAUL,EAAOM,iBAAiB,eAClCC,EAAQP,EAAOM,iBAAiB,mBAChCE,EAAcR,EAAOE,cAAc,qBACnCO,EAAWT,EAAOE,cAAc,aAEtC,IAAIQ,GAAY,EAYhB,SAASC,IACFC,MAAAA,EAASR,EAAMS,OAAS,OAAS,QACvCT,EAAMQ,KAKP,SAASE,IACFC,MAAAA,EAAOX,EAAMS,OAAS,KAAO,MACnCV,EAAOa,YAAcD,EAOtB,SAASE,EAAKC,GACbd,EAAMe,aAAeC,WAAWF,EAAMG,cAAcC,QAAQL,MAO7D,SAASM,EAAmBL,GACrBM,MAAAA,EAAON,EAAMG,cAAcG,KAC3BC,EAAQP,EAAMG,cAAcI,MAClCrB,EAAMoB,GAAQC,EAIf,SAASC,IACFC,MAAAA,EAAUvB,EAAMe,YAAcf,EAAMwB,SAAW,IACrDpB,EAAYqB,MAAMC,aAAeH,KAGlC,SAASI,EAAOb,GACTc,MAAAA,EAAcd,EAAMe,QAAUxB,EAASyB,YAAe9B,EAAMwB,SAClExB,EAAMe,YAAca,EAhDrB7B,EAAOgC,iBAAiB,QAASxB,GACjCP,EAAM+B,iBAAiB,QAASxB,GAChCP,EAAM+B,iBAAiB,OAAQrB,GAC/BV,EAAM+B,iBAAiB,QAASrB,GAChCV,EAAM+B,iBAAiB,aAAcT,GACrCjB,EAAS0B,iBAAiB,QAASJ,GACnCtB,EAAS0B,iBAAiB,YAAa,IAAKzB,GAAY,GACxDD,EAAS0B,iBAAiB,UAAW,IAAKzB,GAAY,GACtDD,EAAS0B,iBAAiB,YAAa,KAAQzB,GAAaqB,EAAOb,SAcnEb,EAAQ+B,QAASC,IAChBA,EAAIF,iBAAiB,QAASlB,KAO/BV,EAAM6B,QAASE,IACdA,EAAMH,iBAAiB,QAASZ","file":"script.0345902d.js","sourceRoot":"../src","sourcesContent":["const player = document.querySelector('.player');\nconst toggle = player.querySelector('.toggle');\nconst video = player.querySelector('.viewer');\nconst skipBtn = player.querySelectorAll('[data-skip]');\nconst range = player.querySelectorAll('.player__slider');\nconst progressBar = player.querySelector('.progress__filled');\nconst progress = player.querySelector('.progress');\n\nlet mouseDown = false;\n\ntoggle.addEventListener('click', togglePlay);\nvideo.addEventListener('click', togglePlay);\nvideo.addEventListener('play', updateBtn);\nvideo.addEventListener('pause', updateBtn);\nvideo.addEventListener('timeupdate', hundleProgress);\nprogress.addEventListener('click', rewind);\nprogress.addEventListener('mousedown', ()=>(mouseDown = true));\nprogress.addEventListener('mouseup', ()=>(mouseDown = false));\nprogress.addEventListener('mousemove', () => { mouseDown && rewind(event) });\n\nfunction togglePlay () {\n\tconst method = video.paused ? 'play' : 'pause';\n\tvideo[method]();\n};\n\n\n\nfunction updateBtn() {\n\tconst icon = video.paused ? '▶️' : '❚ ❚';\n\ttoggle.textContent = icon;\n};\n// add eventListener on btn's btn to skip video 10s / 25s\nskipBtn.forEach((btn) => {\n\tbtn.addEventListener('click', skip);\n});\n\nfunction skip(event) {\n\tvideo.currentTime += parseFloat(event.currentTarget.dataset.skip);\n};\n//add eventListener on two range's to change (volume / speed)\nrange.forEach((input) => {\n\tinput.addEventListener('input', hundleChangeUpdate);\n});\n\nfunction hundleChangeUpdate(event) {\n\tconst name = event.currentTarget.name;\n\tconst value = event.currentTarget.value;\n\tvideo[name] = value;\n\t// video[this.name] = this.value;\n};\n// display progress (yelow line on duration);\nfunction hundleProgress() {\n\tconst percent = video.currentTime / video.duration * 100;\n\tprogressBar.style.flexBasis = `${percent}%`\n};\n\nfunction rewind(event) {\n\tconst rewindTime = (event.offsetX / progress.offsetWidth) * video.duration;\n\tvideo.currentTime = rewindTime;\n};"]}